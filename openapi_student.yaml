openapi: 3.0.3
info:
  title: Student API
  description:
    A API for the beautiful Student API
  version: 1.0.0
servers:
  - url: 'https'
tags:
  - name: Student
    description: Students Info
  - name: Course
    description: Courses Info
paths:
  /students:
    get:
      tags:
        - Student
      summary: Get all students
      description: Get all students
      operationId: getStudents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
  /student:
    post:
      tags:
        - Student
      summary: Create a student
      description: Create a student
      operationId: createStudent
      requestBody:
        description: Student object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /courses:
    get:
      tags:
        - Course
      summary: Get all courses
      description: Get all courses
      operationId: getCourses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
  /course:
    post:
      tags:
        - Course
      summary: Create a course
      description: Create a course
      operationId: createCourse
      requestBody:
        description: Course object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /student/{studentId}:
    get:
      tags:
        - Student
      summary: Get a student by ID
      description: Get a student by ID
      operationId: getStudentById
      parameters:
        - name: studentId
          in: path
          description: ID of the student to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /course/{courseId}:
      get:
        tags:
          - Course
        summary: Get a course by ID
        description: Get a course by ID
        operationId: getCourseById
        parameters:
          - name: courseId
            in: path
            description: ID of the course to get
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Course'

components:
    schemas:
        Student:
          type: object
          required:
            - id
            - name
            - courses
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            courses:
              type: array
              items:
                $ref: '#/components/schemas/Course'
        Course:
          type: object
          required:
            - id
            - title
            - students
          properties:
            id:
              type: integer
              format: int64
            title:
              type: string
            students:
                type: array
                items:
                    $ref: '#/components/schemas/Student'